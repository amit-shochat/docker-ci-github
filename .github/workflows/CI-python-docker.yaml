name: CI for python app test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build_test_app:
    runs-on: ubuntu-latest
    env:
      working-directory: ./app
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      working-directory: ${{env.working-directory}}
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pylint
        if [ -f ../requirements.txt ]; then pip install -r ../requirements.txt; fi
    - name: Lint with flake8
      working-directory: ${{env.working-directory}}
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Analysing the code with pylint
      working-directory: ${{env.working-directory}}
      run: |
         pylint -E app.py
    - name: Testing whit Pytest
      working-directory: ${{env.working-directory}}
      run: |
         pip install --ignore-installed flask ; python3 -m pytest
  check-quality: # CODE quality https://frontend.code-inspector.com
    runs-on: ubuntu-latest
    needs: build_test_app
    name: A job to check my code quality
    steps:
    - name: Check code meets quality standards
      id: code-inspector
      uses: codeinspectorio/github-action@master
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        code_inspector_api_token: ${{ secrets.CODE_INSPECTOR_API_TOKEN }}
        force_ref: 'none'
        min_quality_grade: 'WARNING'
        min_quality_score: '50'
        max_defects_rate: '0.2'
        max_complex_functions_rate: '0.0001'
        max_long_functions_rate: '0.0001'
        project_name: 'docker-ci-github'
        max_timeout_sec: '600'
  docker_build-push:
    runs-on: ubuntu-latest
    needs: check-quality
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python-flask-docker:1.0.0
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
